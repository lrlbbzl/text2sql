[
    {
        "p_str": "SELECT Status, COUNT(City_ID) FROM city GROUP BY Status ORDER BY COUNT(City_ID) ASC",
        "g_str": [
            "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC",
            "farm"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT course_id FROM Student_Course_Registrations GROUP BY course_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1",
            "student_assessment"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT student_id FROM Student_Course_Registrations GROUP BY student_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Student_Course_Registrations GROUP BY student_id ORDER BY COUNT(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1",
            "student_assessment"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT student_id FROM Student_Course_Registrations GROUP BY student_id HAVING COUNT(*) = (SELECT COUNT(*) FROM Student_Course_Registrations GROUP BY student_id ORDER BY COUNT(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1",
            "student_assessment"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT * FROM Students WHERE student_id = (SELECT student_id FROM Student_Course_Registrations GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
            "student_assessment"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT start_station_name, start_station_id FROM trip WHERE start_date >= '2022-08-01' AND start_date < '2022-09-01' GROUP BY start_station_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1",
            "bike_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT bike_id FROM trip WHERE zip_code = '94002' GROUP BY bike_id ORDER BY SUM(duration) DESC LIMIT 1",
        "g_str": [
            "SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1",
            "bike_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT name FROM station GROUP BY city ORDER BY MAX(lat) DESC",
        "g_str": [
            "SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC",
            "bike_1"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Nominee FROM actor GROUP BY Nominee ORDER BY COUNT(Musical_ID) DESC LIMIT 1",
        "g_str": [
            "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1",
            "musical"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT catalog_entry_name FROM Catalog_Contents WHERE catalog_entry_id IN (SELECT catalog_entry_id FROM Catalog_Contents_Additional_Attributes GROUP BY catalog_entry_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)",
            "product_catalog"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT catalog_entry_name FROM Catalog_Contents WHERE catalog_entry_id IN (SELECT catalog_entry_id FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)",
            "product_catalog"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT destination, COUNT(*) FROM flight GROUP BY destination ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1",
            "flight_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T1.name FROM aircraft AS T1 JOIN certificate AS T2 ON T1.aid = T2.aid GROUP BY T2.aid ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1",
            "flight_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.name FROM certificate AS T1 JOIN aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1",
            "flight_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.name, T1.distance FROM aircraft AS T1 JOIN certificate AS T2 ON T1.aid = T2.aid WHERE T1.distance > 5000 GROUP BY T1.aid HAVING COUNT(*) >= 5",
        "g_str": [
            "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5",
            "flight_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.name, T1.distance FROM aircraft AS T1 JOIN certificate AS T2 ON T1.aid = T2.aid WHERE T1.distance > 5000 GROUP BY T2.aid HAVING COUNT(*) >= 5",
        "g_str": [
            "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5",
            "flight_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.name, T1.salary FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T2.aid = T3.aid WHERE T3.distance > 5000 GROUP BY T1.eid ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1",
            "flight_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.name, T1.salary FROM employee AS T1 JOIN certificate AS T2 ON T1.eid = T2.eid JOIN aircraft AS T3 ON T2.aid = T3.aid WHERE T3.distance > 5000 GROUP BY T1.eid ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1",
            "flight_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT AllergyType, COUNT(*) FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy GROUP BY AllergyType ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1",
            "allergy_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT AllergyType, COUNT(*) FROM Allergy_Type AS T1 JOIN Has_Allergy AS T2 ON T1.Allergy = T2.Allergy GROUP BY AllergyType ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1",
            "allergy_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "select country, AVG(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id GROUP BY T1.country ORDER BY AVG(T2.total) DESC LIMIT 10",
        "g_str": [
            "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;",
            "store_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T1.country, AVG(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id GROUP BY T1.country ORDER BY AVG(T2.total) DESC",
        "g_str": [
            "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;",
            "store_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT billing_state FROM invoices WHERE billing_country = 'USA' GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;",
            "store_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT billing_state FROM invoices GROUP BY billing_state ORDER BY COUNT(*) DESC",
        "g_str": [
            "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;",
            "store_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT first_name, last_name, COUNT(id) FROM employees GROUP BY reports_to ORDER BY COUNT(id) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;",
            "store_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT first_name, last_name, COUNT(id) FROM employees GROUP BY reports_to",
        "g_str": [
            "SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;",
            "store_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT customer_id, customer_first_name, customer_last_name FROM Customers WHERE customer_id = (SELECT customer_id FROM Accounts GROUP BY customer_id ORDER BY COUNT(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1",
            "customers_card_transactions"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.customer_id, CONCAT(T2.customer_first_name, ' ', T2.customer_last_name) AS full_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1",
            "customers_card_transactions"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Genre FROM Track GROUP BY Genre ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1",
            "chinook_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT MediaTypeId FROM Track GROUP BY MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1",
            "chinook_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT policy_type_code FROM Available_Policies WHERE Policy_ID = (SELECT Policy_ID FROM Customers_Policies GROUP BY Policy_ID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1",
            "insurance_fnol"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Customer_Phone FROM Available_Policies AS T1 JOIN Customers_Policies AS T2 ON T1.Policy_ID = T2.Policy_ID WHERE T1.policy_type_code = (SELECT policy_type_code FROM Available_Policies GROUP BY policy_type_code ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1)",
            "insurance_fnol"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T2.Effective_Date FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_ID = T2.Claim_ID GROUP BY T2.Claim_ID ORDER BY SUM(T2.Settlement_Amount) DESC LIMIT 1",
        "g_str": [
            "SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1",
            "insurance_fnol"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT id, name, FDA_approved FROM medicine ORDER BY (SELECT COUNT(*) FROM medicine_enzyme_interaction WHERE medicine_id = medicine.id) DESC",
        "g_str": [
            "SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC",
            "medicine_enzyme_interaction"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT interaction_type, COUNT(*) FROM medicine_enzyme_interaction GROUP BY enzyme_id, medicine_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1",
            "medicine_enzyme_interaction"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "eraction_type, count(*) from medicine_enzyme_interaction group by interaction_type order by count(*) desc limit 1;select count(distinct interaction_type) as num_interaction_types from medicine_enzyme_interaction;",
        "g_str": [
            "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1",
            "medicine_enzyme_interaction"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT College, COUNT(*) FROM match_season GROUP BY College ORDER BY COUNT(*) DESC LIMIT 3",
        "g_str": [
            "SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3",
            "match_season"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT College, COUNT(Player) FROM match_season GROUP BY College ORDER BY COUNT(Player) DESC LIMIT 3",
        "g_str": [
            "SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3",
            "match_season"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id GROUP BY T1.Team HAVING COUNT(*) >= 2 ORDER BY T2.Name DESC",
        "g_str": [
            "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC",
            "match_season"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Party FROM representative GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT Party ,  COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1",
            "election_representative"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT apt_type_code, AVG(room_count) FROM Apartments GROUP BY apt_type_code ORDER BY AVG(room_count) DESC LIMIT 3",
        "g_str": [
            "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3",
            "apartment_rentals"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT apt_type_code, SUM(bathroom_count), SUM(bedroom_count) FROM Apartments GROUP BY apt_type_code ORDER BY SUM(room_count) DESC LIMIT 1",
        "g_str": [
            "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1",
            "apartment_rentals"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT apt_type_code, SUM(bathroom_count), SUM(bedroom_count) FROM Apartments GROUP BY apt_type_code ORDER BY SUM(room_count) DESC LIMIT 1",
        "g_str": [
            "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1",
            "apartment_rentals"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Claim_Status_Name FROM Claims_Processing_Stages WHERE Claim_Stage_ID = (SELECT Claim_Stage_ID FROM Claim_Headers GROUP BY Claim_Stage_ID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1",
            "insurance_and_eClaims"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Claim_Status_Name FROM Claims_Processing_Stages WHERE Claim_Stage_ID = (SELECT Claim_Stage_ID FROM Claim_Headers GROUP BY Claim_Stage_ID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1",
            "insurance_and_eClaims"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT customer_id, CONCAT(customer_first_name, ' ', customer_middle_initial, ' ', customer_last_name) AS full_name FROM Customers WHERE customer_id = (SELECT customer_id FROM Accounts GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
            "customers_and_invoices"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Gold FROM match_result WHERE Club_ID = (SELECT Club_ID FROM coach GROUP BY Club_ID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.club_id ,  T1.gold FROM match_result AS T1 JOIN coach AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id ORDER BY count(*) DESC LIMIT 1",
            "riding_club"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Directed_by, COUNT(*) FROM film JOIN schedule ON film.Film_ID = schedule.Film_ID GROUP BY Directed_by ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.directed_by ORDER BY sum(T1.show_times_per_day) DESC LIMIT 1",
            "cinema"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Main_Industry, SUM(Market_Value) FROM company GROUP BY Main_Industry ORDER BY SUM(Market_Value) DESC LIMIT 1",
        "g_str": [
            "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1",
            "gas_company"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "Main_Industry, COUNT(*) FROM company AS T1 JOIN station_company AS T2 ON T1.Company_ID = T2.Company_ID WHERE T1.Main_Industry = (SELECT Main_Industry FROM company GROUP BY Main_Industry ORDER BY SUM(Market_Value) DESC LIMIT 1) GROUP BY T1.Main_Industry",
        "g_str": [
            "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1",
            "gas_company"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Location, COUNT(*) FROM gas_station AS T1 JOIN station_company AS T2 ON T1.Station_ID = T2.Station_ID GROUP BY Location ORDER BY COUNT(*)",
        "g_str": [
            "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)",
            "gas_company"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Member_Name FROM member GROUP BY Member_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1",
            "party_people"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.shipping_agent_name, COUNT(*) FROM Documents AS T1 JOIN Ref_Shipping_Agents AS T2 ON T1.shipping_agent_code = T2.shipping_agent_code GROUP BY T1.shipping_agent_code ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT Ref_Shipping_Agents.shipping_agent_name , count(Documents.document_id) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count(Documents.document_id) DESC LIMIT 1;",
            "cre_Doc_Control_Systems"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.employee_name, COUNT(*) FROM Circulation_History AS T1 JOIN Employees AS T2 ON T1.employee_id = T2.employee_id GROUP BY T1.employee_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT Employees.employee_name , count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count(*) DESC LIMIT 1;",
            "cre_Doc_Control_Systems"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Service_ID, Service_Type_Code FROM Services WHERE Service_ID = (SELECT Service_ID FROM Participants_in_Events GROUP BY Service_ID ORDER BY COUNT(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT T3.service_id ,  T4.Service_Type_Code FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID JOIN EVENTS AS T3 ON T2.Event_ID   =  T3.Event_ID JOIN services AS T4 ON T3.service_id  =  T4.service_id GROUP BY T3.service_id ORDER BY count(*) ASC LIMIT 1",
            "local_govt_in_alabama"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "driverId, T2.surname FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year > 2010 GROUP BY T1.driverId ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1",
            "formula_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT r.name, MAX(res.fastestLapSpeed) FROM races AS r JOIN results AS res ON r.raceId = res.raceId WHERE r.year > 2004 GROUP BY r.name ORDER BY r.year",
        "g_str": [
            "SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year",
            "formula_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.name, MAX(T2.fastestLapSpeed) FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.year > 2004 GROUP BY T1.name ORDER BY T1.year ASC",
        "g_str": [
            "SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year",
            "formula_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT r.name, AVG(res.fastestLapSpeed) FROM races AS r JOIN results AS res ON r.raceId = res.raceId WHERE r.year > 2004 GROUP BY r.name ORDER BY r.year ASC",
        "g_str": [
            "SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year",
            "formula_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.raceId, AVG(T1.fastestLapSpeed) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year > 2004 GROUP BY T2.raceId ORDER BY T2.year",
        "g_str": [
            "SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year",
            "formula_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Country FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",
            "perpetrator"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Year FROM degrees GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1",
            "csu_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Year FROM degrees GROUP BY Year ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1",
            "csu_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Campus, SUM(Degrees) FROM degrees GROUP BY Campus ORDER BY SUM(Degrees) DESC LIMIT 1",
        "g_str": [
            "SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1",
            "csu_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T2.Sex, AVG(T1.Unsure_rate) FROM candidate AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID GROUP BY T2.Sex ORDER BY AVG(T1.Unsure_rate) DESC LIMIT 1",
        "g_str": [
            "SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1",
            "candidate_poll"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.title, AVG(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID HAVING AVG(T1.stars) = (SELECT AVG(stars) FROM Rating GROUP BY mID ORDER BY AVG(stars) ASC LIMIT 1)",
        "g_str": [
            "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1",
            "movie_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT title FROM Movie WHERE mID = (SELECT mID FROM Rating GROUP BY mID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1",
            "movie_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT title FROM Movie WHERE mID = (SELECT mID FROM Rating GROUP BY mID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1",
            "movie_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Location FROM city GROUP BY Location ORDER BY COUNT(County_ID) DESC LIMIT 1",
        "g_str": [
            "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1",
            "county_public_safety"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Location FROM city GROUP BY Location ORDER BY COUNT(County_ID) DESC LIMIT 1",
        "g_str": [
            "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1",
            "county_public_safety"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Room FROM Reservations GROUP BY Room ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;",
            "inn_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Room FROM Reservations GROUP BY Room ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;",
            "inn_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Rooms.roomName, Reservations.Rate, Reservations.CheckIn, Reservations.CheckOut FROM Reservations JOIN Rooms ON Reservations.Room = Rooms.RoomId WHERE Reservations.Rate = (SELECT MAX(Rate) FROM Reservations)",
        "g_str": [
            "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;",
            "inn_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT roomName, basePrice, CheckIn, CheckOut FROM Rooms ORDER BY basePrice DESC LIMIT 1",
        "g_str": [
            "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;",
            "inn_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.ResName, SUM(T1.Time) FROM Visits_Restaurant AS T1 JOIN Restaurant AS T2 ON T1.ResID = T2.ResID GROUP BY T1.ResID ORDER BY SUM(T1.Time) ASC LIMIT 1",
        "g_str": [
            "SELECT Restaurant.ResName ,  sum(Visits_Restaurant.Spent) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum(Visits_Restaurant.Spent) ASC LIMIT 1;",
            "restaurant_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM actor GROUP BY first_name, last_name ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1",
            "sakila_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "irst_name, c.last_name, c.customer_idFROM customer AS cJOIN payment AS p ON c.customer_id = p.customer_idGROUP BY c.customer_idHAVING SUM(p.amount) > 0ORDER BY SUM(p.amount) ASCLIMIT 1",
        "g_str": [
            "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1",
            "sakila_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT CONCAT(c.first_name, ' ', c.last_name) AS full_name, c.customer_id FROM customer AS c JOIN payment AS p ON c.customer_id = p.customer_id GROUP BY c.customer_id ORDER BY SUM(p.amount) ASC LIMIT 1",
        "g_str": [
            "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1",
            "sakila_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.title, T1.inventory_id FROM rental AS T1 JOIN inventory AS T2 ON T1.inventory_id = T2.inventory_id GROUP BY T1.inventory_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1",
            "sakila_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.title, T1.inventory_id FROM rental AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1",
            "sakila_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT CONCAT(first_name, ' ', last_name) AS full_name, staff_id FROM staff WHERE staff_id = (SELECT staff_id FROM payment GROUP BY staff_id ORDER BY COUNT(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1",
            "sakila_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT CONCAT(staff.first_name, ' ', staff.last_name) AS full_name, staff.staff_id FROM staff LEFT JOIN payment ON staff.staff_id = payment.staff_id GROUP BY staff.staff_id ORDER BY COUNT(payment.staff_id) ASC LIMIT 1",
        "g_str": [
            "SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1",
            "sakila_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_ID = T2.cust_ID GROUP BY T2.cust_ID ORDER BY SUM(T2.amount) DESC",
        "g_str": [
            "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)",
            "loan_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT state, SUM(no_of_customers) FROM bank GROUP BY state ORDER BY SUM(no_of_customers) DESC LIMIT 1",
        "g_str": [
            "SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1",
            "loan_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT detention_type_code, detention_type_description FROM Ref_Detention_Type WHERE detention_type_code = (SELECT detention_type_code FROM Ref_Detention_Type GROUP BY detention_type_code ORDER BY COUNT(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1",
            "behavior_monitoring"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.engineer_id, T1.first_name, T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id = T2.engineer_id GROUP BY T1.engineer_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1",
            "assets_maintenance"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT part_name FROM Parts WHERE part_id = (SELECT part_id FROM Fault_Log_Parts GROUP BY part_id ORDER BY COUNT(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1",
            "assets_maintenance"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT skill_id, skill_description FROM Skills WHERE skill_id = (SELECT skill_id FROM Part_Faults GROUP BY skill_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
            "assets_maintenance"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.id, T2.local_authority FROM route AS T1 JOIN station AS T2 ON T1.station_id = T2.id JOIN weekly_weather AS T3 ON T2.id = T3.station_id GROUP BY T2.id ORDER BY AVG(T3.high_temperature) DESC LIMIT 1",
        "g_str": [
            "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id ORDER BY avg(high_temperature) DESC LIMIT 1",
            "station_weather"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT DEPT_CODE, SUM(CRS_CREDIT) FROM COURSE GROUP BY DEPT_CODE ORDER BY SUM(CRS_CREDIT) DESC LIMIT 1",
        "g_str": [
            "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1",
            "college_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT DEPT_NAME FROM DEPARTMENT WHERE DEPT_CODE = (SELECT DEPT_CODE FROM ENROLL GROUP BY DEPT_CODE ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1",
            "college_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT DEPT_NAME FROM DEPARTMENT WHERE DEPT_CODE = (SELECT DEPT_CODE FROM ENROLL GROUP BY DEPT_CODE ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1",
            "college_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT DEPT_NAME FROM DEPARTMENT GROUP BY DEPT_CODE ORDER BY COUNT(EMP_NUM) ASC LIMIT 1",
        "g_str": [
            "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1",
            "college_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT DEPT_NAME FROM DEPARTMENT WHERE DEPT_CODE = (SELECT DEPT_CODE FROM PROFESSOR WHERE PROF_HIGH_DEGREE = 'Ph.D.' GROUP BY DEPT_CODE ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1",
            "college_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT DEPT_CODE FROM PROFESSOR WHERE PROF_HIGH_DEGREE = 'Ph.D.' GROUP BY DEPT_CODE ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1",
            "college_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.DEPT_NAME, COUNT(T2.STU_NUM) AS num_students FROM DEPARTMENT AS T1 JOIN ENROLL AS T2 ON T1.DEPT_CODE = T2.DEPT_CODE GROUP BY T1.DEPT_CODE ORDER BY num_students DESC LIMIT 3",
        "g_str": [
            "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3",
            "college_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.Country FROM competition AS T1 JOIN competition_result AS T2 ON T1.Competition_ID = T2.Competition_ID WHERE T1.Competition_type = 'Tournament' GROUP BY T1.Country ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1",
            "sports_competition"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Country FROM competition GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1",
            "sports_competition"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT languages FROM song WHERE resolution > 500 GROUP BY languages ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1",
            "music_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.artist_name, T2.languages FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.resolution > 500 GROUP BY T1.artist_name, T2.languages ORDER BY COUNT(*) DESC",
        "g_str": [
            "SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1",
            "music_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.languages, MAX(T1.duration), MAX(T2.resolution) FROM song AS T1 JOIN files AS T2 ON T1.f_id = T2.f_id GROUP BY T1.languages ORDER BY T1.languages",
        "g_str": [
            "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages",
            "music_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT languages, MAX(duration), MAX(resolution) FROM song GROUP BY languages ORDER BY languages ASC",
        "g_str": [
            "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages",
            "music_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT song.genre_is, genre.g_name, MIN(song.duration), MIN(song.rating) FROM song JOIN genre ON song.genre_is = genre.g_name GROUP BY song.genre_is, genre.g_name ORDER BY genre.g_name",
        "g_str": [
            "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is",
            "music_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T1.genre_is, T2.song_name, T2.duration, T2.rating FROM song AS T2 JOIN genre AS T1 ON T2.genre_is = T1.g_name GROUP BY T1.genre_is ORDER BY T1.genre_is ASC",
        "g_str": [
            "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is",
            "music_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "artist_name, count(*) from song as t1 join artist as t2 on t1.artist_name = t2.artist_name group by t1.artist_name order by count(*) desc limit 3",
        "g_str": [
            "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3",
            "music_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT artist_name, COUNT(*) FROM song WHERE languages = 'Bangla' GROUP BY artist_name ORDER BY COUNT(*) DESC LIMIT 3",
        "g_str": [
            "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3",
            "music_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT artist_name, COUNT(*) FROM song WHERE languages = 'Bangla' GROUP BY artist_name ORDER BY COUNT(*) DESC LIMIT 3",
        "g_str": [
            "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3",
            "music_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;",
            "baseball_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;",
            "baseball_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;",
            "baseball_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;",
            "baseball_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT T2.team_id ,  T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id WHERE T1.year  =  2014 GROUP BY T1.team_id ORDER BY avg(T1.attendance) DESC LIMIT 1;",
            "baseball_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT T2.team_id ,  T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id WHERE T1.year  =  2014 GROUP BY T1.team_id ORDER BY avg(T1.attendance) DESC LIMIT 1;",
            "baseball_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;",
            "baseball_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;",
            "baseball_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;",
            "baseball_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;",
            "baseball_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;",
            "baseball_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;",
            "baseball_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;",
            "baseball_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;",
            "baseball_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;",
            "baseball_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;",
            "baseball_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;",
            "baseball_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;",
            "baseball_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T1.name, COUNT(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.name ORDER BY COUNT(*) DESC",
        "g_str": [
            "SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)",
            "mountain_photos"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT test_result, COUNT(student_id) FROM Student_Tests_Taken GROUP BY test_result",
        "g_str": [
            "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC",
            "e_learning"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.Claim_ID, T1.Date_Claim_Made FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_ID = T2.Claim_ID GROUP BY T1.Claim_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1",
            "insurance_policies"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select count(*), t1.claim_id from settlements as t1 join claims as t2 on t1.claim_id = t2.claim_id where t2.date_claim_settled = (select max(date_claim_settled) from claims) group by t1.claim_id",
        "g_str": [
            "SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1",
            "insurance_policies"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Claim_ID, COUNT(*) FROM Settlements WHERE Date_Claim_Settled = (SELECT MAX(Date_Claim_Settled) FROM Settlements) GROUP BY Claim_ID",
        "g_str": [
            "SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1",
            "insurance_policies"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Department FROM Department GROUP BY Department ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;",
            "hospital_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT PrepNurse FROM Appointment GROUP BY PrepNurse ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
            "hospital_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT PrepNurse FROM Appointment GROUP BY PrepNurse ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
            "hospital_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT LastName FROM teachers GROUP BY LastName ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1",
            "student_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT FirstName, LastName FROM teachers GROUP BY LastName ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1",
            "student_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Role_Code, COUNT(*) FROM Employees GROUP BY Role_Code ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1",
            "cre_Doc_Tracking_DB"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T2.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T2.employer_organisation_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1",
            "tracking_grants_for_research"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.project_id, T1.project_details FROM Projects AS T2 JOIN Project_Outcomes AS T1 ON T2.project_id = T1.project_id GROUP BY T2.project_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1",
            "tracking_grants_for_research"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.role_description FROM Project_Staff AS T1 JOIN Staff_Roles AS T2 ON T1.role_code = T2.role_code GROUP BY T1.staff_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1",
            "tracking_grants_for_research"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "grant_id, count(*), max(t1.document_id) as document_with_most from documents as t1 join grants as t2 on t1.grant_id = t2.grant_id group by t1.grant_id",
        "g_str": [
            "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1",
            "tracking_grants_for_research"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT project_details FROM Projects WHERE organisation_id = [organisation_id]",
        "g_str": [
            "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )",
            "tracking_grants_for_research"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT * FROM Projects WHERE organisation_id = (SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )",
            "tracking_grants_for_research"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend GROUP BY T1.name ORDER BY AVG(T1.age) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1",
            "network_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.name, AVG(T2.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend GROUP BY T1.name ORDER BY AVG(T2.age) DESC LIMIT 1",
        "g_str": [
            "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1",
            "network_2"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT SUM(access_count) FROM Documents WHERE document_type_code = (SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY SUM(access_count) DESC LIMIT 1)",
        "g_str": [
            "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1",
            "document_management"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT document_structure_code FROM Documents WHERE access_count = (SELECT MIN(access_count) FROM Documents)",
        "g_str": [
            "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1",
            "document_management"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT user_name, password FROM Users WHERE role_code = (SELECT role_code FROM Users GROUP BY role_code ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1",
            "document_management"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT user_name, password FROM Users WHERE role_code = (SELECT role_code FROM Users GROUP BY role_code ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1",
            "document_management"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Industry, COUNT(id) FROM Companies GROUP BY Industry ORDER BY COUNT(id) DESC",
        "g_str": [
            "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC",
            "company_office"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Industry, COUNT(id) FROM Companies GROUP BY Industry ORDER BY COUNT(id) DESC",
        "g_str": [
            "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC",
            "company_office"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT T2.Product_Name, COUNT(*) FROM Products_in_Events AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_ID ORDER BY COUNT(*) DESC",
        "g_str": [
            "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC",
            "solvency_ii"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Instructor FROM Course GROUP BY Instructor ORDER BY COUNT(*) DESC LIMIT 3",
        "g_str": [
            "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3",
            "college_3"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT supplier_id, AVG(total_amount_purchased), AVG(total_1_purchased) FROM Product_Suppliers GROUP BY supplier_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)",
            "department_store"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT AVG(total_amount_purchased), SUM(total_1_purchased) FROM Product_Suppliers WHERE supplier_id = (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)",
            "department_store"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT service_id, COUNT(*) FROM Residents_Services GROUP BY service_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.service_id ,  T1.service_details ,  count(*) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id  =  T2.service_id GROUP BY T1.service_id ORDER BY count(*) DESC LIMIT 1",
            "local_govt_and_lot"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT product FROM product WHERE max_page_size != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)",
            "store_product"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT product FROM product WHERE max_page_size != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)",
            "store_product"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Software_Platform, COUNT(Device_ID) FROM device JOIN stock ON device.Device_ID = stock.Device_ID GROUP BY Software_Platform ORDER BY COUNT(Device_ID) DESC",
        "g_str": [
            "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC",
            "device"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT Software_Platform, COUNT(Device) FROM device GROUP BY Software_Platform ORDER BY COUNT(Device) DESC",
        "g_str": [
            "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC",
            "device"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1",
            "cre_Drama_Workshop_Groups"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1",
            "cre_Drama_Workshop_Groups"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
            "cre_Drama_Workshop_Groups"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
            "cre_Drama_Workshop_Groups"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1",
            "cre_Drama_Workshop_Groups"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1",
            "cre_Drama_Workshop_Groups"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1",
            "cre_Drama_Workshop_Groups"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1",
            "cre_Drama_Workshop_Groups"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1",
            "cre_Drama_Workshop_Groups"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "select",
        "g_str": [
            "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1",
            "cre_Drama_Workshop_Groups"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT product_id, COUNT(problem_id) FROM Problems GROUP BY product_id ORDER BY COUNT(problem_id) DESC LIMIT 3",
        "g_str": [
            "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3",
            "tracking_software_problems"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT product_id FROM Problems GROUP BY product_id ORDER BY COUNT(*) DESC LIMIT 3",
        "g_str": [
            "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3",
            "tracking_software_problems"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT color_description FROM Ref_Colors WHERE color_code = (SELECT color_code FROM Products GROUP BY color_code ORDER BY COUNT(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1",
            "products_gen_characteristics"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT color_description FROM Ref_Colors WHERE color_code = (SELECT color_code FROM Products GROUP BY color_code ORDER BY COUNT(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1",
            "products_gen_characteristics"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT characteristic_name FROM Characteristics WHERE characteristic_id = (SELECT characteristic_id FROM Products GROUP BY characteristic_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1",
            "products_gen_characteristics"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.name FROM event AS T1 JOIN stadium AS T2 ON T1.Stadium_ID = T2.ID GROUP BY T1.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id  =  t2.id JOIN stadium AS t3 ON t3.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1",
            "swimming"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT customer_name, customer_phone FROM Customers WHERE customer_id = (SELECT customer_id FROM Order_Items GROUP BY customer_id ORDER BY SUM(order_quantity) DESC LIMIT 1)",
        "g_str": [
            "SELECT  T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1",
            "customers_and_products_contacts"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT city_code FROM Lives_in GROUP BY city_code ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT city_code FROM student GROUP BY city_code ORDER BY count(*) DESC LIMIT 1",
            "dorm_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT city_code FROM Lives_in GROUP BY city_code ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT city_code FROM student GROUP BY city_code ORDER BY count(*) DESC LIMIT 1",
            "dorm_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Fname FROM Student WHERE StuID IN (SELECT stuid FROM Lives_in WHERE dormid = (SELECT dormid FROM Has_amenity GROUP BY dormid ORDER BY COUNT(*) DESC LIMIT 1))",
        "g_str": [
            "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)",
            "dorm_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Fname FROM Student WHERE StuID IN (SELECT stuid FROM Lives_in WHERE dormid = (SELECT dormid FROM Has_amenity GROUP BY dormid ORDER BY COUNT(*) DESC LIMIT 1))",
        "g_str": [
            "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)",
            "dorm_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT email_address FROM Customers WHERE customer_id IN (SELECT customer_id FROM Complaints GROUP BY product_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1",
            "customer_complaints"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT email_address FROM Customers WHERE customer_id IN (SELECT customer_id FROM Complaints WHERE product_id = (SELECT product_id FROM Complaints GROUP BY product_id ORDER BY COUNT(*) DESC LIMIT 1))",
        "g_str": [
            "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1",
            "customer_complaints"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT product_id FROM Complaints WHERE customer_id = (SELECT customer_id FROM Complaints GROUP BY customer_id ORDER BY COUNT(*) ASC LIMIT 1)",
        "g_str": [
            "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1",
            "customer_complaints"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT product_name FROM Products WHERE product_id IN (SELECT product_id FROM Complaints WHERE customer_id = (SELECT customer_id FROM Complaints GROUP BY customer_id ORDER BY COUNT(*) ASC LIMIT 1))",
        "g_str": [
            "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1",
            "customer_complaints"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT customer_type_code, COUNT(*) FROM Customers GROUP BY customer_type_code ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1",
            "customer_complaints"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT customer_type_code, COUNT(*) FROM Customers GROUP BY customer_type_code ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1",
            "customer_complaints"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT first_name FROM Staff GROUP BY staff_id ORDER BY COUNT(*) DESC LIMIT 5",
        "g_str": [
            "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5",
            "customer_complaints"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.first_name FROM Complaints AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id GROUP BY T1.staff_id ORDER BY COUNT(*) DESC LIMIT 5",
        "g_str": [
            "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5",
            "customer_complaints"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT state FROM Customers GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1",
            "customer_complaints"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT state FROM Customers GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1",
            "customer_complaints"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT College, COUNT(Author) FROM submission GROUP BY College ORDER BY COUNT(Author) DESC LIMIT 1",
        "g_str": [
            "SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1",
            "workshop_paper"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT investor_id, Investor_details FROM Investors WHERE investor_id IN (SELECT investor_id FROM Transactions GROUP BY investor_id ORDER BY COUNT(*) DESC LIMIT 3)",
        "g_str": [
            "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3",
            "tracking_share_transactions"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT GType, COUNT(*) FROM Video_Games GROUP BY GType ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1",
            "game_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT GType FROM Video_Games JOIN Plays_Games ON Video_Games.GameID = Plays_Games.GameID GROUP BY GType ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1",
            "game_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT SportName FROM SportsInfo GROUP BY SportName ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT sportname FROM Sportsinfo WHERE onscholarship  =  'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1",
            "game_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT GName FROM Video_Games JOIN Plays_Games ON Video_Games.GameID = Plays_Games.GameID GROUP BY Plays_Games.GameID ORDER BY COUNT(Plays_Games.Hours_Played) DESC LIMIT 1",
        "g_str": [
            "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1",
            "game_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT GName FROM Video_Games WHERE GameID = (SELECT GameID FROM Plays_Games GROUP BY GameID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1",
            "game_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.customer_name FROM Order_Items AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1",
            "customers_and_addresses"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.customer_name FROM Order_Items AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY SUM(T1.order_quantity) DESC LIMIT 1",
        "g_str": [
            "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1",
            "customers_and_addresses"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT payment_method FROM Customers WHERE customer_id = (SELECT customer_id FROM Order_Items GROUP BY customer_id ORDER BY MIN(order_quantity) LIMIT 1)",
        "g_str": [
            "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1",
            "customers_and_addresses"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT payment_method FROM Customers WHERE customer_id = (SELECT customer_id FROM Order_Items GROUP BY customer_id ORDER BY SUM(order_quantity) ASC LIMIT 1)",
        "g_str": [
            "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1",
            "customers_and_addresses"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT product_id FROM Order_Items GROUP BY product_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1",
            "customers_and_addresses"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.product_id, T2.product_details FROM Order_Items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id ORDER BY SUM(T1.order_quantity) DESC LIMIT 1",
        "g_str": [
            "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1",
            "customers_and_addresses"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.product_id, T2.product_details FROM Order_Items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1",
            "customers_and_addresses"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Rank FROM captain GROUP BY Rank ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1",
            "ship_1"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT party_email FROM Parties WHERE party_id = (SELECT party_id FROM Party_Forms GROUP BY form_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)",
            "e_government"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT party_email FROM Parties WHERE party_id IN (SELECT party_id FROM Party_Forms GROUP BY form_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)",
            "e_government"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT id, name, IATA FROM airport WHERE id = (SELECT airport_id FROM flight GROUP BY airport_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.id ,  T1.name ,  T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
            "flight_company"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Project_ID FROM Projects GROUP BY Project_ID ORDER BY COUNT(*) ASC LIMIT 1",
        "g_str": [
            "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1",
            "cre_Docs_and_Epenses"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "ery, COUNT(*) FROM wine JOIN grapes ON wine.Grape = grapes.Grape WHERE grapes.Color = 'white' GROUP BY Winery ORDER BY COUNT(*) DESC LIMIT 3",
        "g_str": [
            "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"White\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3",
            "wine_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Fname, Lname FROM Faculty WHERE FacID = (SELECT FacID FROM Faculty_Participates_in GROUP BY FacID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",
            "activity_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT Fname, Lname FROM Faculty WHERE FacID = (SELECT FacID FROM Faculty_Participates_in GROUP BY FacID ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",
            "activity_1"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT name, city FROM airports WHERE apid = (SELECT dst_apid FROM routes GROUP BY dst_apid ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1",
            "flight_4"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.name, T1.city FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid GROUP BY T2.dst_apid ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1",
            "flight_4"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.name FROM routes AS T1 JOIN airlines AS T2 ON T1.alid = T2.alid GROUP BY T1.alid ORDER BY COUNT(*) DESC LIMIT 10",
        "g_str": [
            "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10",
            "flight_4"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T2.name FROM routes AS T1 JOIN airlines AS T2 ON T1.alid = T2.alid GROUP BY T1.alid ORDER BY COUNT(*) DESC LIMIT 10",
        "g_str": [
            "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10",
            "flight_4"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT name, city FROM airports WHERE apid = (SELECT src_apid FROM routes GROUP BY src_apid ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1",
            "flight_4"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT name, city FROM airports WHERE apid = (SELECT src_apid FROM routes GROUP BY src_apid ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1",
            "flight_4"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT country FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY COUNT(*) DESC",
        "g_str": [
            "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1",
            "flight_4"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.country, COUNT(*) FROM airports AS T1 JOIN airlines AS T2 ON T1.apid = T2.alid GROUP BY T1.country ORDER BY COUNT(*) DESC",
        "g_str": [
            "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC",
            "flight_4"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.country, COUNT(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T1.country ORDER BY COUNT(*) DESC",
        "g_str": [
            "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC",
            "flight_4"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT city, COUNT(*) FROM airports GROUP BY city HAVING COUNT(*) > 2 ORDER BY COUNT(*) DESC",
        "g_str": [
            "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)",
            "flight_4"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT city, COUNT(apid) FROM airports GROUP BY city HAVING COUNT(apid) > 2 ORDER BY COUNT(apid) DESC",
        "g_str": [
            "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)",
            "flight_4"
        ],
        "hardness": "medium"
    },
    {
        "p_str": "SELECT src_ap, COUNT(*) FROM routes GROUP BY src_ap ORDER BY COUNT(*) DESC",
        "g_str": [
            "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC",
            "flight_4"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT T2.name, COUNT(*) FROM routes AS T1 JOIN airports AS T2 ON T1.src_apid = T2.apid GROUP BY T1.src_apid ORDER BY COUNT(*) DESC",
        "g_str": [
            "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC",
            "flight_4"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT name FROM airports WHERE apid = (SELECT src_apid FROM routes WHERE dst_apid = (SELECT apid FROM airports WHERE country = 'China') GROUP BY src_apid ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1",
            "flight_4"
        ],
        "hardness": "extra"
    },
    {
        "p_str": "SELECT T1.Publisher FROM book_club AS T1 JOIN culture_company AS T2 ON T1.book_club_id = T2.book_club_id GROUP BY T2.book_club_id ORDER BY COUNT(*) DESC LIMIT 1",
        "g_str": [
            "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1",
            "culture_company"
        ],
        "hardness": "hard"
    },
    {
        "p_str": "SELECT Publisher FROM book_club WHERE book_club_id = (SELECT book_club_id FROM culture_company GROUP BY book_club_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "g_str": [
            "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1",
            "culture_company"
        ],
        "hardness": "hard"
    }
]